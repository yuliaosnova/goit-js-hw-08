{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","node_modules/simplelightbox/dist/simple-lightbox.esm.js","src/js/gallery-items.js","src/js/01-gallery.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.de\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.10.3\r\n*/\nclass SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    return this.close();\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            this.domNodes.caption.classList.add(this.options.captionClass);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || ( element.getAttribute(this.options.sourceAttr) && (new RegExp('(' + this.options.fileExt + ')$', 'i')).test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let scrollDiv = document.createElement('div'),\n                    paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n\n                scrollDiv.classList.add('sl-scrollbar-measure');\n\n                document.body.appendChild(scrollDiv);\n                scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n                document.body.removeChild(scrollDiv);\n\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n            this.domNodes.additionalHtml = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self' ? this.relatedElements[this.currentImageIndex] : this.relatedElements[this.currentImageIndex].querySelector(this.options.captionSelector);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption.innerHTML = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        if (this.options.disableScroll) {\n            this.globalScrollbarWidth = this.toggleScrollbar('hide');\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = 0;\n            element.style.display = display || \"block\";\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = opacityTarget;\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;","export const galleryItems = [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n","import SimpleLightbox from \"simplelightbox/dist/simple-lightbox.esm\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n// Add imports above this line\nimport { galleryItems } from './gallery-items';\n// Change code below this line\nconst gallery = document.querySelector(\".gallery\");\nconst cardsMarkup = createCardsMarkup(galleryItems);\n\ngallery.insertAdjacentHTML(\"beforeend\", cardsMarkup);\n\n// gallery.addEventListener(\"click\", onGalleryClick);\n\nfunction createCardsMarkup(galleryItems) {\n  return galleryItems\n    .map(({ preview, original, description }) => {\n      return `\n\t <a class=\"gallery__item\" href=\"${original}\">\n\t <img class=\"gallery__image\" src=\"${preview}\" alt=\"${description}\" />\n  </a>`;\n    })\n    .join(\"\");\n}\n\n\nnew SimpleLightbox('.gallery a', { \n\t\tcaptionsData: 'alt',\n\t\tcaptionsDelay: 250,\n\t\tanimationSpeed: 250,\n});\n\t\n\n\n\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$945867cc3302d81d$var$SimpleLightbox","opts","get","supportsPassive","window","addEventListener","removeEventListener","e","this","domNodes","overlay","document","createElement","classList","add","dataset","opacityTarget","options","overlayOpacity","closeButton","innerHTML","closeText","spinner","navigation","navText","counter","caption","captionPosition","captionClass","image","wrapper","setAttribute","className","rtl","limit","inThrottle","func","apply","arguments","setTimeout","element","fileExt","getAttribute","sourceAttr","RegExp","test","s","body","documentElement","style","type","slice","call","querySelectorAll","fixedClass","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","clientWidth","isAppleDevice","scrollDiv","paddingRight","parseInt","appendChild","offsetWidth","removeChild","originalPaddingRight","scrollbarWidth","forEach","actualPadding","calculatedPadding","getComputedStyle","parseFloat","remove","fixedElements","padding","isOpen","isAnimating","isClosing","relatedElements","currentImageIndex","dispatchEvent","Event","history","historyHasChanges","hashReseted","resetHash","eventNamespace","fadeOut","fadeSpeed","disableScroll","toggleScrollbar","htmlClass","querySelector","additionalHtml","currentImage","controlCoordinates","mousedown","zoomed","capture","initialScale","minMax","maxZoom","doubleTapped","hash","location","substring","index","length","next","prev","nextImage","Image","prevImage","event","src","target","loadedImages","indexOf","push","direction","slideDirection","newIndex","loop","animationSlide","slide","animationSpeed","swipeDiff","show","contains","adjustImage","preloading","preload","tmpImage","windowWidth","widthRatio","windowHeight","innerHeight","heightRatio","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","initialImageIndex","close","alertError","alert","alertErrorMessage","loadImage","updateURL","captionText","imageWidth","width","imageHeight","height","scaleImageToRatio","ratio","top","globalScrollbarWidth","focus","forceFocus","fadeIn","captionSelector","captionContainer","captions","captionType","captionsData","hide","setCaption","targetOffsetX","targetOffsetY","targetScale","transitionPrefix","min","max","setZoomData","initialLocationHash","bind","hashchangeHandler","getElementsByTagName","currentTarget","tagName","match","preventDefault","scrollZoom","containerHeight","getDimensions","containerWidth","imgHeight","imgWidth","containerOffsetX","offsetLeft","containerOffsetY","offsetTop","initialOffsetX","initialOffsetY","delta","wheelDelta","undefined","detail","scrollZoomFactor","scrollTopPos","scrollTop","pinchOffsetX","pageX","pinchOffsetY","pageY","limitOffsetX","limitOffsetY","scaleDifference","opacity","initialPinchDistance","targetPinchDistance","initialPointerOffsetX","clientX","initialPointerOffsetY","clientY","touchCount","touches","doubleTapZoom","initialPointerOffsetX2","initialPointerOffsetY2","sqrt","transitionCapable","imageLeft","swipeYDiff","swipeStart","swipeYStart","pointerOffsetX","pointerOffsetY","touchmoveCount","pointerOffsetX2","pointerOffsetY2","swipeEnd","swipeYEnd","possibleDir","swipeTolerance","swipeClose","isTouchDevice","styles","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","newURL","href","split","newHash","pushStateSupport","title","replace","urlChangedOnce","back","pushState","pathname","search","historyUpdateTimeout","clearTimeout","updateHash","captionDelay","speed","pos","rel","elems","Array","from","elements","filter","getRelated","showCounter","targetURL","events","callback","wrap","namespaces","isPassiveEventsSupported","passive","duration","element1","getPropertyValue","fade","currentOpacity","step","requestAnimationFrame","element2","isFadeIn","initialDisplay","input","Symbol","iterator","fullyNamespacedEvents","elem","jQuery","openImage","off","initialSelector","selector","destroy","constructor","$parcel$interopDefault","nav","enableKeyboard","docClose","disableRightClick","throttleInterval","uniqueImages","navigator","platform","assign","defaultOptions","checkPassiveEventsSupport","calculateTransitionPrefix","imgArr","createDomNodes","isValidLink","parentElement","throttle","$97d4a16aabe2244a$var$gallery","$97d4a16aabe2244a$var$cardsMarkup","preview","original","description","map","join","insertAdjacentHTML","$945867cc3302d81d$export$2e2bcd8739ae039","captionsDelay"],"version":3,"file":"01-gallery.80893fc6.js.map"}